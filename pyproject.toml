[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "wikibee"
dynamic = ["version"]
description = "Extract Wikipedia articles and convert them to TTS-friendly text and audio"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Patrick Brown", email = "patrickdeanbrown@icloud.com" }]
keywords = ["wikipedia", "tts", "text-to-speech", "extraction", "audio"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
]
dependencies = [
    "inflect>=6.0",
    "num2words>=0.5.0",
    "platformdirs>=4.0",
    "requests>=2.0",
    "rich>=13.0",
    "tomli; python_version < \"3.11\"",
    "typer>=0.12",
]

[project.urls]
Homepage = "https://github.com/patrickdeanbrown/wikibee"
Repository = "https://github.com/patrickdeanbrown/wikibee"
Issues = "https://github.com/patrickdeanbrown/wikibee/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "requests-mock>=1.11.0",
    "ruff>=0.0.0",
    "pre-commit>=3.5.0",
    "mypy>=1.10.0",
    "types-requests",
    "isort>=5.12.0",
    "black>=24.0.0",
]
tts = [
    "openai>=1.0.0",
]

[dependency-groups]
dev = [
    "pytest>=6.0",
    "requests-mock>=1.11.0",
    "ruff>=0.0.0",
    "pre-commit>=3.5.0",
    "mypy>=1.10.0",
    "types-requests",
    "isort>=5.12.0",
    "black>=24.0.0",
]
tts = [
    "openai>=1.0.0",
]

[project.scripts]
wikibee = "wikibee.cli:app"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "C"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
include = ["/wikibee", "/tests"]

[tool.hatch.build.targets.wheel]
include = ["/wikibee"]

# ----------------------
# Static typing (mypy)
# ----------------------
[tool.mypy]
python_version = "3.12"
pretty = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
no_implicit_optional = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
ignore_missing_imports = true  # thirdâ€‘party libs without types
exclude = ["^tests/", "^docs/"]

# Module-specific overrides (tighten later per module)
[[tool.mypy.overrides]]
module = ["wikibee.*"]
disallow_any_generics = true

# Ratchet strictness: these modules must be fully annotated and avoid Any returns
[[tool.mypy.overrides]]
module = ["wikibee.client", "wikibee.formatting"]
disallow_untyped_defs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = ["wikibee._types", "wikibee.tts_openai", "wikibee.tts_normalizer"]
disallow_untyped_defs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = ["wikibee.__init__", "wikibee.__main__"]
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["wikibee.cli"]
disallow_untyped_defs = true
warn_return_any = true
